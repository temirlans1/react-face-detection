{"version":3,"sources":["img/test.jpg","views/Home.js","api/face.js","views/ImageInput.js","views/VideoInput.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Home","react_default","a","createElement","Link","to","Component","loadModels","_loadModels","apply","this","arguments","_callee","MODEL_URL","regenerator_default","wrap","_context","prev","next","process","faceapi","stop","getFullFaceDescription","_x","_getFullFaceDescription","_callee2","blob","inputSize","OPTION","useTinyModel","img","fullDesc","_args2","_context2","length","undefined","scoreThreshold","sent","withFaceLandmarks","abrupt","INIT_STATE","imageURL","require","detections","ImageInput","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","componentWillMount","asyncToGenerator","mark","handleImage","state","image","then","setState","map","fd","detection","handleFileChange","_ref3","_callee3","event","_context3","resetState","URL","createObjectURL","target","files","loading","objectSpread","_this$state","drawBox","i","_H","box","height","_W","width","_X","_Y","_y","key","style","position","border","borderColor","transform","concat","id","type","onChange","accept","src","alt","withRouter","VideoInput","setInputDevice","navigator","mediaDevices","enumerateDevices","_ref2","devices","filter","device","kind","facingMode","exact","startCapture","interval","setInterval","capture","webcam","current","getScreenshot","React","createRef","clearInterval","videoConstraints","camera","className","display","flexDirection","alignItems","react_webcam_default","audio","ref","screenshotFormat","App","Router","history","createHistory","basename","Route","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.62f4f10f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/test.34e86f06.jpg\";","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default class Home extends Component {\n  render() {\n    return (\n      <div>\n        <h2>Facial Recognition App</h2>\n        <li>\n          <Link to=\"/photo\">Photo Input</Link>\n        </li>\n        <li>\n          <Link to=\"/camera\">Video Camera</Link>\n        </li>\n      </div>\n    );\n  }\n}\n","import * as faceapi from 'face-api.js';\n\n// Load models and weights\nexport async function loadModels() {\n  const MODEL_URL = process.env.PUBLIC_URL + '/models';\n  await faceapi.loadTinyFaceDetectorModel(MODEL_URL);\n  await faceapi.loadFaceLandmarkTinyModel(MODEL_URL);\n}\n\nexport async function getFullFaceDescription(blob, inputSize = 512) {\n  // tiny_face_detector options\n  let scoreThreshold = 0.5;\n  const OPTION = new faceapi.TinyFaceDetectorOptions({\n    inputSize,\n    scoreThreshold\n  });\n  const useTinyModel = true;\n\n  // fetch image to api\n  let img = await faceapi.fetchImage(blob);\n\n  // detect all faces and generate full description from image\n  // including landmark and descriptor of each face\n  let fullDesc = await faceapi\n    .detectAllFaces(img, OPTION)\n    .withFaceLandmarks(useTinyModel);\n  return fullDesc;\n}\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { loadModels, getFullFaceDescription } from '../api/face';\n\n// Import image to test API\nconst testImg = require('../img/test.jpg');\n\n// Initial State\nconst INIT_STATE = {\n  imageURL: testImg,\n  fullDesc: null,\n  detections: null\n};\n\nclass ImageInput extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INIT_STATE };\n  }\n\n  componentWillMount = async () => {\n    await loadModels();\n    await this.handleImage(this.state.imageURL);\n  };\n\n  handleImage = async (image = this.state.imageURL) => {\n    await getFullFaceDescription(image).then(fullDesc => {\n      if (!!fullDesc) {\n        this.setState({\n          fullDesc,\n          detections: fullDesc.map(fd => fd.detection)\n        });\n      }\n    });\n  };\n\n  handleFileChange = async event => {\n    this.resetState();\n    await this.setState({\n      imageURL: URL.createObjectURL(event.target.files[0]),\n      loading: true\n    });\n    this.handleImage();\n  };\n\n  resetState = () => {\n    this.setState({ ...INIT_STATE });\n  };\n\n  render() {\n    const { imageURL, detections } = this.state;\n\n    let drawBox = null;\n    if (!!detections) {\n      drawBox = detections.map((detection, i) => {\n        let _H = detection.box.height;\n        let _W = detection.box.width;\n        let _X = detection.box._x;\n        let _Y = detection.box._y;\n        return (\n          <div key={i}>\n            <div\n              style={{\n                position: 'absolute',\n                border: 'solid',\n                borderColor: 'blue',\n                height: _H,\n                width: _W,\n                transform: `translate(${_X}px,${_Y}px)`\n              }}\n            >\n            </div>\n          </div>\n        );\n      });\n    }\n\n    return (\n      <div>\n        <input\n          id=\"myFileUpload\"\n          type=\"file\"\n          onChange={this.handleFileChange}\n          accept=\".jpg, .jpeg, .png\"\n        />\n        <div style={{ position: 'relative' }}>\n          <div style={{ position: 'absolute' }}>\n            <img src={imageURL} alt=\"imageURL\" />\n          </div>\n          {!!drawBox ? drawBox : null}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(ImageInput);\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Webcam from 'react-webcam';\nimport { loadModels, getFullFaceDescription } from '../api/face';\n\nconst WIDTH = 420;\nconst HEIGHT = 420;\nconst inputSize = 160;\n\nclass VideoInput extends Component {\n  constructor(props) {\n    super(props);\n    this.webcam = React.createRef();\n    this.state = {\n      fullDesc: null,\n      detections: null,\n      facingMode: null\n    };\n  }\n\n  componentWillMount = async () => {\n    await loadModels();\n    this.setInputDevice();\n  };\n\n  setInputDevice = () => {\n    navigator.mediaDevices.enumerateDevices().then(async devices => {\n      let inputDevice = await devices.filter(\n        device => device.kind === 'videoinput'\n      );\n      if (inputDevice.length < 2) {\n        await this.setState({\n          facingMode: 'user'\n        });\n      } else {\n        await this.setState({\n          facingMode: { exact: 'environment' }\n        });\n      }\n      this.startCapture();\n    });\n  };\n\n  startCapture = () => {\n    this.interval = setInterval(() => {\n      this.capture();\n    }, 1500);\n  };\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  capture = async () => {\n    if (!!this.webcam.current) {\n      await getFullFaceDescription(\n        this.webcam.current.getScreenshot(),\n        inputSize\n      ).then(fullDesc => {\n        if (!!fullDesc) {\n          this.setState({\n            detections: fullDesc.map(fd => fd.detection)\n          });\n        }\n      });\n    }\n  };\n\n  render() {\n    const { detections, facingMode } = this.state;\n    let videoConstraints = null;\n    let camera = '';\n    if (!!facingMode) {\n      videoConstraints = {\n        width: WIDTH,\n        height: HEIGHT,\n        facingMode: facingMode\n      };\n      if (facingMode === 'user') {\n        camera = 'Front';\n      } else {\n        camera = 'Back';\n      }\n    }\n\n    let drawBox = null;\n    if (!!detections) {\n      drawBox = detections.map((detection, i) => {\n        let _H = detection.box.height;\n        let _W = detection.box.width;\n        let _X = detection.box._x;\n        let _Y = detection.box._y;\n        return (\n          <div key={i}>\n            <div\n              style={{\n                position: 'absolute',\n                border: 'solid',\n                borderColor: 'blue',\n                height: _H,\n                width: _W,\n                transform: `translate(${_X}px,${_Y}px)`\n              }}\n            >\n            </div>\n          </div>\n        );\n      });\n    }\n\n    return (\n      <div\n        className=\"Camera\"\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center'\n        }}\n      >\n        <p>Camera: {camera}</p>\n        <div\n          style={{\n            width: WIDTH,\n            height: HEIGHT\n          }}\n        >\n          <div style={{ position: 'relative', width: WIDTH }}>\n            {!!videoConstraints ? (\n              <div style={{ position: 'absolute' }}>\n                <Webcam\n                  audio={false}\n                  width={WIDTH}\n                  height={HEIGHT}\n                  ref={this.webcam}\n                  screenshotFormat=\"image/jpeg\"\n                  videoConstraints={videoConstraints}\n                />\n              </div>\n            ) : null}\n            {!!drawBox ? drawBox : null}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(VideoInput);\n","import React, { Component } from 'react';\nimport { Route, Router } from 'react-router-dom';\nimport createHistory from 'history/createBrowserHistory';\nimport './App.css';\n\nimport Home from './views/Home';\nimport ImageInput from './views/ImageInput';\nimport VideoInput from './views/VideoInput';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Router history={createHistory({ basename: process.env.PUBLIC_URL })}>\n          <div className=\"route\">\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/photo\" component={ImageInput} />\n            <Route exact path=\"/camera\" component={VideoInput} />\n          </div>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}